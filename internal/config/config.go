// Code generated by arg_config_generate.py. DO NOT EDIT.
package config

var GlobalConfig *RuntimeConfig

type RuntimeConfig struct {
	// Path to the config file. If a argument is provided in both the config file and command line, the config file argument will be used
	ConfigFilePath string `json:"config_file_path"`

	// Path to the dependency file generated by other tools or manually
	DependencyFilePath string `json:"dependency_file_path"`

	// Type of the dependency file. Currently only support 'Restler'
	DependencyFileType string `json:"dependency_file_type"`

	// Extra headers to be added to the request, in the format of stringified JSON, e.g., '{\"header1\": \"value1\", \"header2\": \"value2\"}'
	ExtraHeaders string `json:"extra_headers"`

	// Path to the file containing the dictionary of fuzz values, in the format of a JSON list. Each element in the list is a dictionary with two key-value pairs, one is `name` (value is of type string) and the other is `value` (value can be any json).
	FuzzValueDictFilePath string `json:"fuzz_value_dict_file_path"`

	// The maximum time the fuzzer can run, in seconds
	FuzzerBudget int `json:"fuzzer_budget"`

	// Type of the fuzzer. Currently only support 'Basic'
	FuzzerType string `json:"fuzzer_type"`

	// Path to internal service openapi spec file, json format
	InternalServiceOpenAPIPath string `json:"internal_service_openapi_path"`

	// Log level: debug, info, warn, error, fatal, panic
	LogLevel string `json:"log_level"`

	// Should log to file
	LogToFile bool `json:"log_to_file"`

	// Path to the OpenAPI spec file
	OpenAPISpecPath string `json:"openapi_spec_path"`

	// Output directory, e.g., ./output
	OutputDir string `json:"output_dir"`

	// Base URL of the API, e.g., https://www.example.com
	ServerBaseURL string `json:"server_base_url"`

	// Type of the trace backend. Currently only support 'Jaeger'
	TraceBackendType string `json:"trace_backend_type"`

	// URL of the trace backend
	TraceBackendURL string `json:"trace_backend_url"`
}

func InitConfig() {
	GlobalConfig = &RuntimeConfig{}
}
