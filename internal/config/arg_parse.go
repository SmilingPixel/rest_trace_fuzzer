package config

import (
	"flag"

	"github.com/bytedance/sonic"
	"github.com/rs/zerolog/log"
)

func ParseCmdArgs() {
	// Required arguments
	flag.StringVar(&GlobalConfig.OpenAPISpecPath, "openapi-spec", "", "Path to the OpenAPI spec file")
	flag.StringVar(&GlobalConfig.ServerBaseURL, "server-base-url", "https://www.example.com", "Base URL of the API, e.g., https://www.example.com")

	// Deprecated, used to parse dependency files from Restler
	flag.StringVar(&GlobalConfig.DependencyFilePath, "dependency-file", "", "Path to the dependency file generated by other tools or manually")
	flag.StringVar(&GlobalConfig.DependencyFileType, "dependency-file-type", "", "Type of the dependency file. Currently only support 'Restler'")

	// Optional arguments
	flag.StringVar(&GlobalConfig.FuzzerType, "fuzzer-type", "Basic", "Type of the fuzzer. Currently only support 'Basic'")
	// flag.StringVar(&GlobalConfig.DependencyFileType, "dependency-file-type", "", "Type of the dependency file. Currently only support 'Restler'")
	flag.DurationVar(&GlobalConfig.FuzzerBudget, "fuzzer-budget", 30, "The maximum time the fuzzer can run, in seconds")
	flag.StringVar(&GlobalConfig.LogLevel, "log-level", "info", "Log level: debug, info, warn, error, fatal, panic")

	
	flag.Parse()

	jsonStr, _ := sonic.Marshal(GlobalConfig)
	log.Info().Msgf("Parsed command line arguments: %s", jsonStr)


}
	
